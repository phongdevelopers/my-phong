//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Users
{

    /// <summary>
    /// DataSource class for GroupRole objects
    /// </summary>
    public partial class GroupRoleDataSource
    {
        /// <summary>
        /// Deletes a GroupRole object from the database
        /// </summary>
        /// <param name="groupRole">The GroupRole object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(GroupRole groupRole)
        {
            return groupRole.Delete();
        }

        /// <summary>
        /// Deletes a GroupRole object with given id from the database
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to delete.</param>
        /// <param name="roleId">Value of RoleId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 groupId, Int32 roleId)
        {
            GroupRole groupRole = new GroupRole();
            if (groupRole.Load(groupId, roleId)) return groupRole.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a GroupRole object to the database.
        /// </summary>
        /// <param name="groupRole">The GroupRole object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(GroupRole groupRole) { return groupRole.Save(); }

        /// <summary>
        /// Load a GroupRole object for the given primary key from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <param name="roleId">Value of RoleId of the object to load.</param>
        /// <returns>The loaded GroupRole object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static GroupRole Load(Int32 groupId, Int32 roleId)
        {
            GroupRole groupRole = new GroupRole();
            groupRole.GroupId = groupId;
            groupRole.RoleId = roleId;
            groupRole.IsDirty = false;
            return groupRole;
        }

        /// <summary>
        /// Loads a collection of GroupRole objects for the given criteria for Group from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>A collection of GroupRole objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static GroupRoleCollection LoadForGroup(Int32 groupId)
        {
            GroupRoleCollection GroupRoles = new GroupRoleCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT RoleId");
            selectQuery.Append(" FROM ac_GroupRoles");
            selectQuery.Append(" WHERE GroupId = @groupId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@groupId", System.Data.DbType.Int32, groupId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    GroupRole groupRole = new GroupRole();
                    groupRole.GroupId = groupId;
                    groupRole.RoleId = dr.GetInt32(0);
                    GroupRoles.Add(groupRole);
                }
                dr.Close();
            }
            return GroupRoles;
        }

        /// <summary>
        /// Loads a collection of GroupRole objects for the given criteria for Role from the database.
        /// </summary>
        /// <param name="roleId">Value of RoleId of the object to load.</param>
        /// <returns>A collection of GroupRole objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static GroupRoleCollection LoadForRole(Int32 roleId)
        {
            GroupRoleCollection GroupRoles = new GroupRoleCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT GroupId");
            selectQuery.Append(" FROM ac_GroupRoles");
            selectQuery.Append(" WHERE RoleId = @roleId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@roleId", System.Data.DbType.Int32, roleId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    GroupRole groupRole = new GroupRole();
                    groupRole.RoleId = roleId;
                    groupRole.GroupId = dr.GetInt32(0);
                    GroupRoles.Add(groupRole);
                }
                dr.Close();
            }
            return GroupRoles;
        }

        /// <summary>
        /// Updates/Saves the given GroupRole object to the database.
        /// </summary>
        /// <param name="groupRole">The GroupRole object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(GroupRole groupRole) { return groupRole.Save(); }

    }
}
