//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Shipping
{

    /// <summary>
    /// DataSource class for ShipMethodGroup objects
    /// </summary>
    public partial class ShipMethodGroupDataSource
    {
        /// <summary>
        /// Deletes a ShipMethodGroup object from the database
        /// </summary>
        /// <param name="shipMethodGroup">The ShipMethodGroup object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(ShipMethodGroup shipMethodGroup)
        {
            return shipMethodGroup.Delete();
        }

        /// <summary>
        /// Deletes a ShipMethodGroup object with given id from the database
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to delete.</param>
        /// <param name="groupId">Value of GroupId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 shipMethodId, Int32 groupId)
        {
            ShipMethodGroup shipMethodGroup = new ShipMethodGroup();
            if (shipMethodGroup.Load(shipMethodId, groupId)) return shipMethodGroup.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a ShipMethodGroup object to the database.
        /// </summary>
        /// <param name="shipMethodGroup">The ShipMethodGroup object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(ShipMethodGroup shipMethodGroup) { return shipMethodGroup.Save(); }

        /// <summary>
        /// Load a ShipMethodGroup object for the given primary key from the database.
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to load.</param>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>The loaded ShipMethodGroup object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodGroup Load(Int32 shipMethodId, Int32 groupId)
        {
            ShipMethodGroup shipMethodGroup = new ShipMethodGroup();
            shipMethodGroup.ShipMethodId = shipMethodId;
            shipMethodGroup.GroupId = groupId;
            shipMethodGroup.IsDirty = false;
            return shipMethodGroup;
        }

        /// <summary>
        /// Loads a collection of ShipMethodGroup objects for the given criteria for Group from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>A collection of ShipMethodGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodGroupCollection LoadForGroup(Int32 groupId)
        {
            ShipMethodGroupCollection ShipMethodGroups = new ShipMethodGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT ShipMethodId");
            selectQuery.Append(" FROM ac_ShipMethodGroups");
            selectQuery.Append(" WHERE GroupId = @groupId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@groupId", System.Data.DbType.Int32, groupId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ShipMethodGroup shipMethodGroup = new ShipMethodGroup();
                    shipMethodGroup.GroupId = groupId;
                    shipMethodGroup.ShipMethodId = dr.GetInt32(0);
                    ShipMethodGroups.Add(shipMethodGroup);
                }
                dr.Close();
            }
            return ShipMethodGroups;
        }

        /// <summary>
        /// Loads a collection of ShipMethodGroup objects for the given criteria for ShipMethod from the database.
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to load.</param>
        /// <returns>A collection of ShipMethodGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodGroupCollection LoadForShipMethod(Int32 shipMethodId)
        {
            ShipMethodGroupCollection ShipMethodGroups = new ShipMethodGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT GroupId");
            selectQuery.Append(" FROM ac_ShipMethodGroups");
            selectQuery.Append(" WHERE ShipMethodId = @shipMethodId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@shipMethodId", System.Data.DbType.Int32, shipMethodId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ShipMethodGroup shipMethodGroup = new ShipMethodGroup();
                    shipMethodGroup.ShipMethodId = shipMethodId;
                    shipMethodGroup.GroupId = dr.GetInt32(0);
                    ShipMethodGroups.Add(shipMethodGroup);
                }
                dr.Close();
            }
            return ShipMethodGroups;
        }

        /// <summary>
        /// Updates/Saves the given ShipMethodGroup object to the database.
        /// </summary>
        /// <param name="shipMethodGroup">The ShipMethodGroup object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(ShipMethodGroup shipMethodGroup) { return shipMethodGroup.Save(); }

    }
}
