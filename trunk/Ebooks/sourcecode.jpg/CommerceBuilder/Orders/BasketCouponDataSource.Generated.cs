//Generated by DataSourceBaseGenerator_AssnWithColumns

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Orders
{

    /// <summary>
    /// DataSource class for BasketCoupon objects
    /// </summary>
    public partial class BasketCouponDataSource
    {
        /// <summary>
        /// Deletes a BasketCoupon object from the database
        /// </summary>
        /// <param name="basketCoupon">The BasketCoupon object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(BasketCoupon basketCoupon)
        {
            return basketCoupon.Delete();
        }

        /// <summary>
        /// Deletes a BasketCoupon object with given id from the database
        /// </summary>
        /// <param name="basketId">Value of BasketId of the object to delete.</param>
        /// <param name="couponId">Value of CouponId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 basketId, Int32 couponId)
        {
            BasketCoupon basketCoupon = new BasketCoupon();
            if (basketCoupon.Load(basketId, couponId)) return basketCoupon.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a BasketCoupon object to the database.
        /// </summary>
        /// <param name="basketCoupon">The BasketCoupon object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(BasketCoupon basketCoupon) { return basketCoupon.Save(); }

        /// <summary>
        /// Load a BasketCoupon object for the given primary key from the database.
        /// </summary>
        /// <param name="basketId">Value of BasketId of the object to load.</param>
        /// <param name="couponId">Value of CouponId of the object to load.</param>
        /// <returns>The loaded BasketCoupon object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static BasketCoupon Load(Int32 basketId, Int32 couponId)
        {
            BasketCoupon basketCoupon = null;
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT " + BasketCoupon.GetColumnNames(string.Empty));
            selectQuery.Append(" FROM ac_BasketCoupons");
            selectQuery.Append(" WHERE BasketId = @basketId AND CouponId = @couponId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@basketId", System.Data.DbType.Int32, basketId);
            database.AddInParameter(selectCommand, "@couponId", System.Data.DbType.Int32, couponId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                if (dr.Read())
                {
                    basketCoupon = new BasketCoupon();
                    BasketCoupon.LoadDataReader(basketCoupon, dr);
                }
                dr.Close();
            }
            return basketCoupon;
        }

        /// <summary>
        /// Loads a collection of BasketCoupon objects for the given criteria for Basket from the database.
        /// </summary>
        /// <param name="basketId">Value of BasketId of the object to load.</param>
        /// <returns>A collection of BasketCoupon objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static BasketCouponCollection LoadForBasket(Int32 basketId)
        {
            BasketCouponCollection BasketCoupons = new BasketCouponCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT!
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT " + BasketCoupon.GetColumnNames(string.Empty));
            selectQuery.Append(" FROM ac_BasketCoupons");
            selectQuery.Append(" WHERE BasketId = @basketId");
            selectQuery.Append(" ORDER BY AppliedDate DESC");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@basketId", System.Data.DbType.Int32, basketId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    BasketCoupon basketCoupon = new BasketCoupon();
                    BasketCoupon.LoadDataReader(basketCoupon, dr);
                    BasketCoupons.Add(basketCoupon);
                }
                dr.Close();
            }
            return BasketCoupons;
        }

        /// <summary>
        /// Loads a collection of BasketCoupon objects for the given criteria for Coupon from the database.
        /// </summary>
        /// <param name="couponId">Value of CouponId of the object to load.</param>
        /// <returns>A collection of BasketCoupon objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static BasketCouponCollection LoadForCoupon(Int32 couponId)
        {
            BasketCouponCollection BasketCoupons = new BasketCouponCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT!
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT " + BasketCoupon.GetColumnNames(string.Empty));
            selectQuery.Append(" FROM ac_BasketCoupons");
            selectQuery.Append(" WHERE CouponId = @couponId");
            selectQuery.Append(" ORDER BY AppliedDate DESC");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@couponId", System.Data.DbType.Int32, couponId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    BasketCoupon basketCoupon = new BasketCoupon();
                    BasketCoupon.LoadDataReader(basketCoupon, dr);
                    BasketCoupons.Add(basketCoupon);
                }
                dr.Close();
            }
            return BasketCoupons;
        }

        /// <summary>
        /// Updates/Saves the given BasketCoupon object to the database.
        /// </summary>
        /// <param name="basketCoupon">The BasketCoupon object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(BasketCoupon basketCoupon) { return basketCoupon.Save(); }

    }
}
