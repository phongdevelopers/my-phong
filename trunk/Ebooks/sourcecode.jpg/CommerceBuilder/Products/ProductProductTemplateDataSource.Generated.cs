//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Products
{

    /// <summary>
    /// DataSource class for ProductProductTemplate objects
    /// </summary>
    public partial class ProductProductTemplateDataSource
    {
        /// <summary>
        /// Deletes a ProductProductTemplate object from the database
        /// </summary>
        /// <param name="productProductTemplate">The ProductProductTemplate object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(ProductProductTemplate productProductTemplate)
        {
            return productProductTemplate.Delete();
        }

        /// <summary>
        /// Deletes a ProductProductTemplate object with given id from the database
        /// </summary>
        /// <param name="productId">Value of ProductId of the object to delete.</param>
        /// <param name="productTemplateId">Value of ProductTemplateId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 productId, Int32 productTemplateId)
        {
            ProductProductTemplate productProductTemplate = new ProductProductTemplate();
            if (productProductTemplate.Load(productId, productTemplateId)) return productProductTemplate.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a ProductProductTemplate object to the database.
        /// </summary>
        /// <param name="productProductTemplate">The ProductProductTemplate object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(ProductProductTemplate productProductTemplate) { return productProductTemplate.Save(); }

        /// <summary>
        /// Load a ProductProductTemplate object for the given primary key from the database.
        /// </summary>
        /// <param name="productId">Value of ProductId of the object to load.</param>
        /// <param name="productTemplateId">Value of ProductTemplateId of the object to load.</param>
        /// <returns>The loaded ProductProductTemplate object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ProductProductTemplate Load(Int32 productId, Int32 productTemplateId)
        {
            ProductProductTemplate productProductTemplate = new ProductProductTemplate();
            productProductTemplate.ProductId = productId;
            productProductTemplate.ProductTemplateId = productTemplateId;
            productProductTemplate.IsDirty = false;
            return productProductTemplate;
        }

        /// <summary>
        /// Loads a collection of ProductProductTemplate objects for the given criteria for Product from the database.
        /// </summary>
        /// <param name="productId">Value of ProductId of the object to load.</param>
        /// <returns>A collection of ProductProductTemplate objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ProductProductTemplateCollection LoadForProduct(Int32 productId)
        {
            ProductProductTemplateCollection ProductProductTemplates = new ProductProductTemplateCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT ProductTemplateId");
            selectQuery.Append(" FROM ac_ProductProductTemplates");
            selectQuery.Append(" WHERE ProductId = @productId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@productId", System.Data.DbType.Int32, productId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ProductProductTemplate productProductTemplate = new ProductProductTemplate();
                    productProductTemplate.ProductId = productId;
                    productProductTemplate.ProductTemplateId = dr.GetInt32(0);
                    ProductProductTemplates.Add(productProductTemplate);
                }
                dr.Close();
            }
            return ProductProductTemplates;
        }

        /// <summary>
        /// Loads a collection of ProductProductTemplate objects for the given criteria for ProductTemplate from the database.
        /// </summary>
        /// <param name="productTemplateId">Value of ProductTemplateId of the object to load.</param>
        /// <returns>A collection of ProductProductTemplate objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ProductProductTemplateCollection LoadForProductTemplate(Int32 productTemplateId)
        {
            ProductProductTemplateCollection ProductProductTemplates = new ProductProductTemplateCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT ProductId");
            selectQuery.Append(" FROM ac_ProductProductTemplates");
            selectQuery.Append(" WHERE ProductTemplateId = @productTemplateId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@productTemplateId", System.Data.DbType.Int32, productTemplateId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ProductProductTemplate productProductTemplate = new ProductProductTemplate();
                    productProductTemplate.ProductTemplateId = productTemplateId;
                    productProductTemplate.ProductId = dr.GetInt32(0);
                    ProductProductTemplates.Add(productProductTemplate);
                }
                dr.Close();
            }
            return ProductProductTemplates;
        }

        /// <summary>
        /// Updates/Saves the given ProductProductTemplate object to the database.
        /// </summary>
        /// <param name="productProductTemplate">The ProductProductTemplate object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(ProductProductTemplate productProductTemplate) { return productProductTemplate.Save(); }

    }
}
