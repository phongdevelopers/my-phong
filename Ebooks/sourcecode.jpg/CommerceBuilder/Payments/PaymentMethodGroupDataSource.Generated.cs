//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Payments
{

    /// <summary>
    /// DataSource class for PaymentMethodGroup objects
    /// </summary>
    public partial class PaymentMethodGroupDataSource
    {
        /// <summary>
        /// Deletes a PaymentMethodGroup object from the database
        /// </summary>
        /// <param name="paymentMethodGroup">The PaymentMethodGroup object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(PaymentMethodGroup paymentMethodGroup)
        {
            return paymentMethodGroup.Delete();
        }

        /// <summary>
        /// Deletes a PaymentMethodGroup object with given id from the database
        /// </summary>
        /// <param name="paymentMethodId">Value of PaymentMethodId of the object to delete.</param>
        /// <param name="groupId">Value of GroupId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 paymentMethodId, Int32 groupId)
        {
            PaymentMethodGroup paymentMethodGroup = new PaymentMethodGroup();
            if (paymentMethodGroup.Load(paymentMethodId, groupId)) return paymentMethodGroup.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a PaymentMethodGroup object to the database.
        /// </summary>
        /// <param name="paymentMethodGroup">The PaymentMethodGroup object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(PaymentMethodGroup paymentMethodGroup) { return paymentMethodGroup.Save(); }

        /// <summary>
        /// Load a PaymentMethodGroup object for the given primary key from the database.
        /// </summary>
        /// <param name="paymentMethodId">Value of PaymentMethodId of the object to load.</param>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>The loaded PaymentMethodGroup object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static PaymentMethodGroup Load(Int32 paymentMethodId, Int32 groupId)
        {
            PaymentMethodGroup paymentMethodGroup = new PaymentMethodGroup();
            paymentMethodGroup.PaymentMethodId = paymentMethodId;
            paymentMethodGroup.GroupId = groupId;
            paymentMethodGroup.IsDirty = false;
            return paymentMethodGroup;
        }

        /// <summary>
        /// Loads a collection of PaymentMethodGroup objects for the given criteria for Group from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>A collection of PaymentMethodGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static PaymentMethodGroupCollection LoadForGroup(Int32 groupId)
        {
            PaymentMethodGroupCollection PaymentMethodGroups = new PaymentMethodGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT PaymentMethodId");
            selectQuery.Append(" FROM ac_PaymentMethodGroups");
            selectQuery.Append(" WHERE GroupId = @groupId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@groupId", System.Data.DbType.Int32, groupId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    PaymentMethodGroup paymentMethodGroup = new PaymentMethodGroup();
                    paymentMethodGroup.GroupId = groupId;
                    paymentMethodGroup.PaymentMethodId = dr.GetInt32(0);
                    PaymentMethodGroups.Add(paymentMethodGroup);
                }
                dr.Close();
            }
            return PaymentMethodGroups;
        }

        /// <summary>
        /// Loads a collection of PaymentMethodGroup objects for the given criteria for PaymentMethod from the database.
        /// </summary>
        /// <param name="paymentMethodId">Value of PaymentMethodId of the object to load.</param>
        /// <returns>A collection of PaymentMethodGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static PaymentMethodGroupCollection LoadForPaymentMethod(Int32 paymentMethodId)
        {
            PaymentMethodGroupCollection PaymentMethodGroups = new PaymentMethodGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT GroupId");
            selectQuery.Append(" FROM ac_PaymentMethodGroups");
            selectQuery.Append(" WHERE PaymentMethodId = @paymentMethodId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@paymentMethodId", System.Data.DbType.Int32, paymentMethodId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    PaymentMethodGroup paymentMethodGroup = new PaymentMethodGroup();
                    paymentMethodGroup.PaymentMethodId = paymentMethodId;
                    paymentMethodGroup.GroupId = dr.GetInt32(0);
                    PaymentMethodGroups.Add(paymentMethodGroup);
                }
                dr.Close();
            }
            return PaymentMethodGroups;
        }

        /// <summary>
        /// Updates/Saves the given PaymentMethodGroup object to the database.
        /// </summary>
        /// <param name="paymentMethodGroup">The PaymentMethodGroup object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(PaymentMethodGroup paymentMethodGroup) { return paymentMethodGroup.Save(); }

    }
}
