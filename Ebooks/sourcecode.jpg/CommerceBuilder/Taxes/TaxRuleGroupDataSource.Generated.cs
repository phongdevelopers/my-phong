//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Taxes
{

    /// <summary>
    /// DataSource class for TaxRuleGroup objects
    /// </summary>
    public partial class TaxRuleGroupDataSource
    {
        /// <summary>
        /// Deletes a TaxRuleGroup object from the database
        /// </summary>
        /// <param name="taxRuleGroup">The TaxRuleGroup object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(TaxRuleGroup taxRuleGroup)
        {
            return taxRuleGroup.Delete();
        }

        /// <summary>
        /// Deletes a TaxRuleGroup object with given id from the database
        /// </summary>
        /// <param name="taxRuleId">Value of TaxRuleId of the object to delete.</param>
        /// <param name="groupId">Value of GroupId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 taxRuleId, Int32 groupId)
        {
            TaxRuleGroup taxRuleGroup = new TaxRuleGroup();
            if (taxRuleGroup.Load(taxRuleId, groupId)) return taxRuleGroup.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a TaxRuleGroup object to the database.
        /// </summary>
        /// <param name="taxRuleGroup">The TaxRuleGroup object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(TaxRuleGroup taxRuleGroup) { return taxRuleGroup.Save(); }

        /// <summary>
        /// Load a TaxRuleGroup object for the given primary key from the database.
        /// </summary>
        /// <param name="taxRuleId">Value of TaxRuleId of the object to load.</param>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>The loaded TaxRuleGroup object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static TaxRuleGroup Load(Int32 taxRuleId, Int32 groupId)
        {
            TaxRuleGroup taxRuleGroup = new TaxRuleGroup();
            taxRuleGroup.TaxRuleId = taxRuleId;
            taxRuleGroup.GroupId = groupId;
            taxRuleGroup.IsDirty = false;
            return taxRuleGroup;
        }

        /// <summary>
        /// Loads a collection of TaxRuleGroup objects for the given criteria for Group from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>A collection of TaxRuleGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static TaxRuleGroupCollection LoadForGroup(Int32 groupId)
        {
            TaxRuleGroupCollection TaxRuleGroups = new TaxRuleGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT TaxRuleId");
            selectQuery.Append(" FROM ac_TaxRuleGroups");
            selectQuery.Append(" WHERE GroupId = @groupId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@groupId", System.Data.DbType.Int32, groupId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    TaxRuleGroup taxRuleGroup = new TaxRuleGroup();
                    taxRuleGroup.GroupId = groupId;
                    taxRuleGroup.TaxRuleId = dr.GetInt32(0);
                    TaxRuleGroups.Add(taxRuleGroup);
                }
                dr.Close();
            }
            return TaxRuleGroups;
        }

        /// <summary>
        /// Loads a collection of TaxRuleGroup objects for the given criteria for TaxRule from the database.
        /// </summary>
        /// <param name="taxRuleId">Value of TaxRuleId of the object to load.</param>
        /// <returns>A collection of TaxRuleGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static TaxRuleGroupCollection LoadForTaxRule(Int32 taxRuleId)
        {
            TaxRuleGroupCollection TaxRuleGroups = new TaxRuleGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT GroupId");
            selectQuery.Append(" FROM ac_TaxRuleGroups");
            selectQuery.Append(" WHERE TaxRuleId = @taxRuleId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@taxRuleId", System.Data.DbType.Int32, taxRuleId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    TaxRuleGroup taxRuleGroup = new TaxRuleGroup();
                    taxRuleGroup.TaxRuleId = taxRuleId;
                    taxRuleGroup.GroupId = dr.GetInt32(0);
                    TaxRuleGroups.Add(taxRuleGroup);
                }
                dr.Close();
            }
            return TaxRuleGroups;
        }

        /// <summary>
        /// Updates/Saves the given TaxRuleGroup object to the database.
        /// </summary>
        /// <param name="taxRuleGroup">The TaxRuleGroup object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(TaxRuleGroup taxRuleGroup) { return taxRuleGroup.Save(); }

    }
}
