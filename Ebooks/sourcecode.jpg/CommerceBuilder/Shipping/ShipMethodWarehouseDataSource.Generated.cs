//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using CommerceBuilder.Common;
using CommerceBuilder.Data;
namespace CommerceBuilder.Shipping
{

    /// <summary>
    /// DataSource class for ShipMethodWarehouse objects
    /// </summary>
    public partial class ShipMethodWarehouseDataSource
    {
        /// <summary>
        /// Deletes a ShipMethodWarehouse object from the database
        /// </summary>
        /// <param name="shipMethodWarehouse">The ShipMethodWarehouse object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(ShipMethodWarehouse shipMethodWarehouse)
        {
            return shipMethodWarehouse.Delete();
        }

        /// <summary>
        /// Deletes a ShipMethodWarehouse object with given id from the database
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to delete.</param>
        /// <param name="warehouseId">Value of WarehouseId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 shipMethodId, Int32 warehouseId)
        {
            ShipMethodWarehouse shipMethodWarehouse = new ShipMethodWarehouse();
            if (shipMethodWarehouse.Load(shipMethodId, warehouseId)) return shipMethodWarehouse.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a ShipMethodWarehouse object to the database.
        /// </summary>
        /// <param name="shipMethodWarehouse">The ShipMethodWarehouse object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(ShipMethodWarehouse shipMethodWarehouse) { return shipMethodWarehouse.Save(); }

        /// <summary>
        /// Load a ShipMethodWarehouse object for the given primary key from the database.
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to load.</param>
        /// <param name="warehouseId">Value of WarehouseId of the object to load.</param>
        /// <returns>The loaded ShipMethodWarehouse object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodWarehouse Load(Int32 shipMethodId, Int32 warehouseId)
        {
            ShipMethodWarehouse shipMethodWarehouse = new ShipMethodWarehouse();
            shipMethodWarehouse.ShipMethodId = shipMethodId;
            shipMethodWarehouse.WarehouseId = warehouseId;
            shipMethodWarehouse.IsDirty = false;
            return shipMethodWarehouse;
        }

        /// <summary>
        /// Loads a collection of ShipMethodWarehouse objects for the given criteria for ShipMethod from the database.
        /// </summary>
        /// <param name="shipMethodId">Value of ShipMethodId of the object to load.</param>
        /// <returns>A collection of ShipMethodWarehouse objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodWarehouseCollection LoadForShipMethod(Int32 shipMethodId)
        {
            ShipMethodWarehouseCollection ShipMethodWarehouses = new ShipMethodWarehouseCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT WarehouseId");
            selectQuery.Append(" FROM ac_ShipMethodWarehouses");
            selectQuery.Append(" WHERE ShipMethodId = @shipMethodId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@shipMethodId", System.Data.DbType.Int32, shipMethodId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ShipMethodWarehouse shipMethodWarehouse = new ShipMethodWarehouse();
                    shipMethodWarehouse.ShipMethodId = shipMethodId;
                    shipMethodWarehouse.WarehouseId = dr.GetInt32(0);
                    ShipMethodWarehouses.Add(shipMethodWarehouse);
                }
                dr.Close();
            }
            return ShipMethodWarehouses;
        }

        /// <summary>
        /// Loads a collection of ShipMethodWarehouse objects for the given criteria for Warehouse from the database.
        /// </summary>
        /// <param name="warehouseId">Value of WarehouseId of the object to load.</param>
        /// <returns>A collection of ShipMethodWarehouse objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static ShipMethodWarehouseCollection LoadForWarehouse(Int32 warehouseId)
        {
            ShipMethodWarehouseCollection ShipMethodWarehouses = new ShipMethodWarehouseCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SELECT ShipMethodId");
            selectQuery.Append(" FROM ac_ShipMethodWarehouses");
            selectQuery.Append(" WHERE WarehouseId = @warehouseId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@warehouseId", System.Data.DbType.Int32, warehouseId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    ShipMethodWarehouse shipMethodWarehouse = new ShipMethodWarehouse();
                    shipMethodWarehouse.WarehouseId = warehouseId;
                    shipMethodWarehouse.ShipMethodId = dr.GetInt32(0);
                    ShipMethodWarehouses.Add(shipMethodWarehouse);
                }
                dr.Close();
            }
            return ShipMethodWarehouses;
        }

        /// <summary>
        /// Updates/Saves the given ShipMethodWarehouse object to the database.
        /// </summary>
        /// <param name="shipMethodWarehouse">The ShipMethodWarehouse object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(ShipMethodWarehouse shipMethodWarehouse) { return shipMethodWarehouse.Save(); }

    }
}
